from typing import List, Optional, Tuple, Literal

from ...utils.configuration_utils import (
    BaseTrainerConfig
)


class YoloV8TrainerConfig(BaseTrainerConfig):
    model_type = "yolov8"
    def __init__(
        self,
        task_type: str,
        trainer_class_name: str,
        pretrained_model: str = "/autotrain/autotrain/trainers/yolov8/yolov8n-cls.pt",
        validation_split: float = 0.2,
        batch: int = 16,
        epochs: int = 10,
        patience: int = 100,
        imgsz: int = 256,
        save: bool = True,
        save_period: int = -1,
        cache: bool = False,
        device: Optional[str] = None,
        workers: int = 8,
        tp_directory: Optional[str] = None,
        tp_project_name: str = "train",
        exist_ok: bool = False,
        pretrained: bool = True,
        optimizer: str = "auto",
        verbose: bool = True,
        seed: int = 0,
        deterministic: bool = True,
        single_cls: bool = False,
        rect: bool = False,
        cos_lr: bool = False,
        close_mosaic: int = 10,
        resume: bool = False,
        amp: bool = True,
        fraction: float = 1.0,
        profile: bool = False,
        freeze: Optional[List[int]] = None,
        multi_scale: bool = False,
        overlap_mask: bool = True,
        mask_ratio: int = 4,
        dropout: float = 0.0,
        val: bool = True,
        split: str = "val",
        save_json: bool = True,
        save_hybrid: bool = False,
        conf: Optional[float] = None,
        iou: float = 0.7,
        max_det: int = 300,
        half: bool = False,
        dnn: bool = False,
        plots: bool = True,
        save_txt: bool = False,
        save_conf: bool = False,
        save_crop: bool = False,
        show_labels: bool = True,
        show_conf: bool = True,
        show_boxes: bool = True,
        line_width: Optional[int] = None,
        agnostic_nms: bool = False,
        retina_masks: bool = False,
        boxes: float = 7.5,
        cls: float = 0.5,
        dfl: float = 1.5,
        pose: float = 12.0,
        kobj: float = 1.0,
        label_smoothing: float = 0.0,
        nbs: int = 64,
        hsv_h: float = 0.015,
        hsv_s: float = 0.7,
        hsv_v: float = 0.4,
        degrees: float = 0.0,
        translate: float = 0.1,
        scale: float = 0.5,
        shear: float = 0.0,
        perspective: float = 0.0,
        flipud: float = 0.0,
        fliplr: float = 0.5,
        mosaic: float = 1.0,
        mixup: float = 0.0,
        copy_paste: float = 0.0,
        auto_augment: str = "randaugment",
        erasing: float = 0.4,
        crop_fraction: float = 1.0,
        lr0: float = 0.01,
        lrf: float = 0.01,
        momentum: float = 0.937,
        weight_decay: float = 0.0005,
        warmup_epochs: float = 3.0,
        warmup_momentum: float = 0.8,
        warmup_bias_lr: float = 0.1,
        iterations: int = 2
    ):
        super().__init__(task_type=task_type, trainer_class_name=trainer_class_name, tp_project_name=tp_project_name, tp_directory=tp_directory)
        
        self.pretrained_model = pretrained_model
        # 设置所有参数
        self.batch = batch
        self.epochs = epochs
        self.patience = patience
        self.imgsz = imgsz
        self.save = save
        self.save_period = save_period
        self.cache = cache
        self.device = device
        self.workers = workers
        self.tp_directory = tp_directory
        self.tp_project_name = tp_project_name
        self.exist_ok = exist_ok
        self.pretrained = pretrained
        self.optimizer = optimizer
        self.verbose = verbose
        self.seed = seed
        self.deterministic = deterministic
        self.single_cls = single_cls
        self.rect = rect
        self.cos_lr = cos_lr
        self.close_mosaic = close_mosaic
        self.resume = resume
        self.amp = amp
        self.fraction = fraction
        self.profile = profile
        self.freeze = freeze
        self.multi_scale = multi_scale
        self.overlap_mask = overlap_mask
        self.mask_ratio = mask_ratio
        self.dropout = dropout
        self.val = val
        self.split = split
        self.save_json = save_json
        self.save_hybrid = save_hybrid
        self.conf = conf
        self.iou = iou
        self.max_det = max_det
        self.half = half
        self.dnn = dnn
        self.plots = plots
        self.save_txt = save_txt
        self.save_conf = save_conf
        self.save_crop = save_crop
        self.show_labels = show_labels
        self.show_conf = show_conf
        self.show_boxes = show_boxes
        self.line_width = line_width
        self.agnostic_nms = agnostic_nms
        self.retina_masks = retina_masks
        self.boxes = boxes
        self.cls = cls
        self.dfl = dfl
        self.pose = pose
        self.kobj = kobj
        self.label_smoothing = label_smoothing
        self.nbs = nbs
        self.hsv_h = hsv_h
        self.hsv_s = hsv_s
        self.hsv_v = hsv_v
        self.degrees = degrees
        self.translate = translate
        self.scale = scale
        self.shear = shear
        self.perspective = perspective
        self.flipud = flipud
        self.fliplr = fliplr
        self.mosaic = mosaic
        self.mixup = mixup
        self.copy_paste = copy_paste
        self.auto_augment = auto_augment
        self.erasing = erasing
        self.crop_fraction = crop_fraction
        self.lr0 = lr0
        self.lrf = lrf
        self.momentum = momentum
        self.weight_decay = weight_decay
        self.warmup_epochs = warmup_epochs
        self.warmup_momentum = warmup_momentum
        self.warmup_bias_lr = warmup_bias_lr
        self.iterations = iterations